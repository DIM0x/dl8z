name: Generate For Other Services

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
  four_everland:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: Setup Ruby
        uses: ruby/setup-ruby@55283cc23133118229fd3f97f9336ee23a179fcf # v1.146.0
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --config _config_4everland.yml
        env:
          JEKYLL_ENV: production
      - name: Clone and Copy
        run: |
            mkdir -p ~/.ssh
            echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            git clone git@github.com:DIM0x/dl8z-4EVERLAND.git old-4
            cp -r $GITHUB_WORKSPACE/_site new-4/
            cp -r old-4/.git/ new-4/.git/
        env:
          SSH_PRIVATE_KEY: ${{ secrets.GH2_RSA }}
      - name: git push
        run: |
            cd new-4
            git config --global user.email "forker2@dim0.uu.me"
            git config --global user.name "forker2"
            git add .
            git diff-index --quiet HEAD || git commit -m "Automatic publish from dl8z"
            git push origin master
  
  bitbucket:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Ruby
        uses: ruby/setup-ruby@55283cc23133118229fd3f97f9336ee23a179fcf # v1.146.0
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --config _config_bitbucket.yml
        env:
          JEKYLL_ENV: production
      - name: Clone and Copy
        run: |
            mkdir -p ~/.ssh
            echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            echo "$KNOWN_HOSTS" > ~/.ssh/known_hosts
            chmod 600 ~/.ssh/known_hosts
            echo CHECK KNOWN_HOSTS:
            cat ~/.ssh/known_hosts
            git config --global user.email "forker2@dim0.uu.me"
            git config --global user.name "forker2"
            git config --list
            git clone https://dim0x@bitbucket.org/dl8z/dl8z.bitbucket.io old-b
            cp -r $GITHUB_WORKSPACE/_site new-b/
            cp -r old-b/.git/ new-b/.git/
        env:
          SSH_PRIVATE_KEY: ${{ secrets.BB_RSA }}
          KNOWN_HOSTS: ${{ secrets.KNOWN_HOSTS }}
      - name: git push
        run: |
            cd new-b
            git remote remove origin
            git remote add origin git@bitbucket.org:dl8z/dl8z.bitbucket.io
            git remote -v
            git add .
            git diff-index --quiet HEAD || git commit -m "Automatic publish from dl8z"
            git push origin master
            
  neocities:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Ruby
        uses: ruby/setup-ruby@55283cc23133118229fd3f97f9336ee23a179fcf # v1.146.0
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --config _config_neocities.yml
        env:
          JEKYLL_ENV: production
      - name: Get API Key
        run: |
            gem install neocities
            curl "https://dl8z:$PSWD@neocities.org/api/key" > apikey.txt
            cat apikey.txt | grep "api_key" | sed "s/:/\n/g" | sed '1d' | sed 's/"//g' | sed 's/ //g' > ~/.config/neocities/config
        env:
          PSWD: ${{ secrets.NEO_PSWD }}
      - name: Push
        run: |
            cd _site
            cp 404.html not_found.html
            neocities push .